{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputchange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputchange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39cad59c.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState , action ) => {\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: 'asd123',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours').toDate(),\r\n//     notes: 'Comprar pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Ramon'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            };\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( \r\n                    event => ( event.id === action.payload.id )\r\n                    ? action.payload : event\r\n                )\r\n            };\r\n        \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( event => ( event.id !== state.activeEvent.id ) ),\r\n                activeEvent: null\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n\r\n}\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    \r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","\r\nconst baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events=[] ) => {\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            end: moment( event.end ).toDate(),\r\n            start: moment( event.start ).toDate(),\r\n        })\r\n    ); \r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ){\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log( event )\r\n                dispatch( eventAddNew( event ) )\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\nconst eventAddNew = ( event ) => ( { \r\n        type: types.eventAddNew,\r\n        payload: event\r\n    } );\r\n\r\nexport const eventSetActive = ( event ) => ( { \r\n        type: types.eventSetActive,\r\n        payload: event\r\n    } );\r\n\r\nexport const eventClearActiveEvent = () => ( { \r\n        type: types.eventClearActiveEvent\r\n    } );\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchWithToken( `events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventUpdated( event) )\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchWithToken( `events/${ id }`, {}, 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch( eventDeleted() )\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventUpdated = ( event ) => ( { \r\n        type: types.eventUpdated,\r\n        payload: event\r\n    } );\r\n\r\nexport const eventDeleted = ( event ) => ( { \r\n        type: types.eventDeleted\r\n    } );\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchWithToken( 'events' );\r\n            const body = await resp.json();\r\n            const events = prepareEvents( body.events );\r\n            \r\n            dispatch( eventLoaded( events ) );\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken( 'auth/new', { email, password, name }, 'POST')\r\n        const body = await resp.json();\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithToken( 'auth/renew' )\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst  checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n  const [values, setValues] = useState(initialState)\r\n  const reset = () => {\r\n    setValues( initialState );\r\n  }\r\n  const handleInputChange = ( { target} ) => {\r\n      setValues({\r\n          ...values,\r\n          [ target.name ]: target.value\r\n      });\r\n  }\r\n\r\n  return [ values, handleInputChange, reset ]; \r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputchange ] = useForm({\r\n        lEmail: 'ramon@gmail.com',\r\n        lPassword: '123456'\r\n    } );\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputchange ] = useForm({\r\n        rName: 'Ramon',\r\n        rEmail: 'ramon@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    } );\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ));\r\n    }\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        if( rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales.', 'error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputchange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputchange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputchange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputchange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputchange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputchange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                onClick={ handleLogout }\r\n                className=\"btn btn-outline-danger\">\r\n               <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ( { event } ) => {\r\n\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ( { type: types.uiOpenModal } );\r\nexport const uiCloseModal = () => ( { type: types.uiCloseModal } );","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\nconst now = moment().minute(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true)\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [ activeEvent, setFormValues ])\r\n    const handleInputChange = ( { target } ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch(  eventClearActiveEvent() );\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    \r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd )){\r\n            return Swal.fire('Error', 'La fecha fin debe ser superior a la fecha de inicio', 'error');\r\n        }\r\n        if( title.trim().length < 2 ) {\r\n            return setTitleValid( false );\r\n        }\r\n        if( activeEvent ){\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={customStyles}\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento:' : 'Nuevo evento:'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={ handleSubmitForm }>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid&& 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n            >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n        \r\n    }, [ dispatch ])\r\n    \r\n    const onDoubleClick = ( e ) => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n    \r\n    const onSelectEvent = ( e ) => {\r\n        dispatch( eventSetActive( e ) );\r\n\r\n    }\r\n    \r\n    const onViewChange = ( e ) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = ( e ) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n    \r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            \r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                style={{ height: 500 }}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                } }\r\n            />\r\n            < AddNewFab />\r\n            \r\n            {\r\n                (activeEvent) && < DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />   \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> ) \r\n                    : <Component {...props} />\r\n            )\r\n        }\r\n        />      \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid }  = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch])\r\n\r\n    if( checking ){\r\n        return (<h5> Espere... </h5>)\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid  }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './components/router/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\nconsole.log(process.env)\nReactDOM.render(\n    <CalendarApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}